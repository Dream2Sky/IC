// <auto-generated />
using IC.Core.Entity;
using IC.Core.Entity.CloudLink.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using MySql.Data.EntityFrameworkCore.Storage.Internal;
using System;

namespace IC.CloudLink.WebApi.Migrations
{
    [DbContext(typeof(CloudLinkDBContext))]
    partial class CloudLinkDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("IC.Core.Entity.CloudLink.DB.FlowCard", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime>("DelTime");

                    b.Property<string>("ICCId")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("IsDel");

                    b.Property<string>("OpenId")
                        .HasMaxLength(32);

                    b.Property<decimal>("TotalFlow");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<decimal>("UsagedFlow");

                    b.Property<string>("UserId")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FlowCards");
                });

            modelBuilder.Entity("IC.Core.Entity.CloudLink.DB.FlowPackage", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime>("DelTime");

                    b.Property<string>("Desc")
                        .HasMaxLength(1000);

                    b.Property<decimal>("Flow");

                    b.Property<bool>("IsDel");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("FlowPackages");
                });

            modelBuilder.Entity("IC.Core.Entity.CloudLink.DB.FlowPackageRecord", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("CardId")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime>("DelTime");

                    b.Property<DateTime>("ExpiryDate");

                    b.Property<bool>("IsDel");

                    b.Property<string>("PackageId")
                        .HasMaxLength(36);

                    b.Property<string>("UserId")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.ToTable("FlowPackageRecords");
                });

            modelBuilder.Entity("IC.Core.Entity.CloudLink.DB.ReChargeRecord", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime>("DelTime");

                    b.Property<bool>("IsDel");

                    b.Property<string>("UserId")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.ToTable("ReChargeRecords");
                });

            modelBuilder.Entity("IC.Core.Entity.CloudLink.DB.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<decimal>("Balance");

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime>("DelTime");

                    b.Property<bool>("IsDel");

                    b.Property<string>("Phone")
                        .HasMaxLength(13);

                    b.Property<string>("WxOpenId")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IC.Core.Entity.CloudLink.DB.FlowCard", b =>
                {
                    b.HasOne("IC.Core.Entity.CloudLink.DB.User")
                        .WithMany("FlowCards")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
